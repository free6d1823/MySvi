# QDF2400
config CPU_QDF2400
	bool
	select CPU_64v8
	select CPU_v80A
	help
	  1 Cortex-A53 (IMC) + many Cortex-A57 (APC).

# Figure out what processor architecture version we should be using.
# This defines the compiler instruction set which depends on the machine type.

config CPU_64v8
	bool

config CPU_v80A
	bool

config CPU_v81A
	bool

config CPU_v82A
	bool

config CPU_BIG_ENDIAN
	bool "Build big-endian firmware"
	depends on ARCH_SUPPORTS_BIG_ENDIAN
	help
	  Say Y if you plan on running a kernel in big-endian mode.
	  Note that your board must be properly built and your board
	  port must properly enable any big-endian related features
	  of your chipset/board/processor.

config MINI_EXCLUSIVE_ACCESS
	bool
	help
	  Say Y if the running RAM doesn't support exclusives monitor.

config NR_CPUS
	int "Maximum number of CPUs (1-4096)"
	range 1 4096
	# These have to remain sorted largest to smallest
	default "48"

config GIC
	bool "Generic Interrupt Controller (GIC)"
	depends on CPU_64v8
	select ARCH_HAS_IRQC
	help
	  The GIC architecture describes an interrupt controller for use with
	  one or more processors that comply with ARM A or R architecture
	  profiles.

if GIC

config ARCH_HAS_GICv2
	bool

config ARCH_HAS_GICv3
	bool

config GICv2
	bool "GICv2 support"
	depends ARCH_HAS_GICv2
	help
	  GIC v2 (IHI0028B) architecture specification.

config GICv3
	bool "GICv3 support"
	depends ARCH_HAS_GICv3
	help
	  GIC v3 (IHI0069D) architecture specification.

config GIC600
	bool "GIC600 support"
	depends ARCH_HAS_GICv3
	help
	  GIC600 ip.

endif

config DCC
	bool "Debug Communications Channel (DCC)"
	select ARCH_HAS_UART
	select IRQ_FORBIDDEN
	help
	  The Debug Communications Channel, DCC, is a channel for passing
	  data between the PE and an external agent, such as a debugger.
	  The DCC provides a communications channel between:
	  * An external debugger, described as the debug host.
	  * The debug implementation on the PE, described as the debug
	    target.
	  The DCC can be used:
	  * As a 32-bit full-duplex channel.
	  * As a 64-bit half-duplex channel.
	  The DCC is an essential part of Debug state operation and can
	  also be used in Non-debug state.
	  The driver currently only support IRQ polling.

config CONSOLE_IMC_BUFFERING
	bool "IMC outputs to the APC buffer"
	depends DEBUG_DCC
	depends CONSOLE_OUTPUT

config CORESIGHT
	bool "ARM CoreSight architecture support"

if CORESIGHT

config CORESIGHT_VERBOSE
	bool "Enable log verbosity"
	help
	  Print detailed enumeration logs.

config CORESIGHT_DBG_CPUv80A
	bool "ARM CoreSight Processor Core v8.0A Debug support"
	depends CPU_v80A
	help
	  DEVARCH.archid=0x6A15.

config CORESIGHT_ETM
	bool "ARM CoreSight Embedded Trace Macrocell (ETM) support"
	help
	  DEVARCH.archid=0x4A13.

config CORESIGHT_STM
	bool "ARM CoreSight System Trace Macrocell (STM) support"
	help
	  DEVARCH.archid=0x0A63.

config CORESIGHT_PMU
	bool "ARM CoreSight Performance Monitor Unit (PMU) support"
	help
	  DEVARCH.archid=0x2A16.

config CORESIGHT_CTI
	bool "ARM CoreSight Cross Trigger Interface (CTI) support"

config CORESIGHT_TPIU
	bool "ARM CoreSight Trace Port Interface Unit (TPIU) support"
	help
	  DEVTYPE.major=1, DEVTYPE.sub=1.

config CORESIGHT_ETB
	bool "ARM CoreSight Embedded Trace Buffer (ETB) support"
	help
	  DEVTYPE.major=1, DEVTYPE.sub=2.

config CORESIGHT_FUNNEL
	bool "ARM CoreSight Funnel/Router support"
	help
	  DEVTYPE.major=2, DEVTYPE.sub=1.

config CORESIGHT_REPLICATOR
	bool "ARM CoreSight Replicator support"
	help
	  DEVTYPE.major=2, DEVTYPE.sub=2.

config CORESIGHT_TMC
	bool "ARM CoreSight Trace Memory Controller (TMC) support"
	help
	  DEVTYPE.major=2, DEVTYPE.sub=3.

endif

config MMU
	bool "Memory Management Unit (MMU)"

if MMU

config MMU_SELF_MODIFY
	bool "Enable self modify"

config MMU_DEBUG
	bool "Enable MMU debugging messages"
	depends EXPERIMENTAL

config MMU_FAST
	bool "Enable fast MMU with predefined pagetable"
	help
		pagetable is defined in pagetable.c"
endif

config DATA_BASE
	hex "configure data base"
	default "0x0"

config HEAP_BASE
	hex "configure heap base"
	default "0x0"
